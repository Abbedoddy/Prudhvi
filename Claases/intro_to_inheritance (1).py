# -*- coding: utf-8 -*-
"""Intro to Inheritance.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VylWXIWJILQ5D_43Bq36IJzJnbjetXHK
"""

class Employee:
  dept = "Financial"
  company = "MNC"       # Type of variable - Class Variables
  # def __init__(self,name,age,location):
  #   self.name = name # Type of variable -  Instance variables
  #   self.age = age
  #   self.location = location

 
  # def display(self): # Type of method - Instance methods
  #   print(self.name, " is of ", self.age, " years old living in ", self.location)
  
  def dept_details(self): # Type of method - Static Methods
    print("This particular employee is from Financial dept")

class Company(Employee):
  pass

comp1 = Company()
comp1.dept_details()
print(comp1.dept)
print(comp1.company)


# obj1 = Employee("Charan", 26, "Hyderabad")
# obj2 = Employee("Arjun", 24, "Vijayawada")
# print(obj1.name)
# print(obj2.location)
# obj1.display()
# obj2.display()
# Employee.dept_details()

"""In OOPS Methodologies are of 4 types
1. Inheritance
2. Polymorphism
3. Encapsulation
4. Abstraction
"""

# Inheritance - Acquiring the properties from ancestors/parents
 # transfer of characteristics/properties from parent to child

# Variable/Attributes/properties - kindness, patience,the way of living
# Methods/behaviour - the way we are living by learning from them

# Types of Inheritance
# 1. Single Inheritance 
# 2. Multilevel
# 3. Multiple
# 4. Hierarchical
# 5. Hybrid